@model TASEF.Models.ActifParamModel

@{
    ViewBag.Title = "Modifier paramétres";
}

<h2>Modification du paramétre</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Paramétre</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.code)

    @Html.HiddenFor(model => model.exercice)

    @Html.HiddenFor(model => model.matricule)

    @Html.HiddenFor(model => model.ownerId)

    @Html.HiddenFor(model => model.libelle)

    @Html.HiddenFor(model => model.type)

    <div class="form-group">
        @Html.LabelFor(model => model.brutN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.brutN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.brutN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.amortProvN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.amortProvN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.amortProvN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.netN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.netN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.netN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.netN1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.netN1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.netN1, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Enregistrer" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Retour", "Index",null,new { id = "brownLink"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

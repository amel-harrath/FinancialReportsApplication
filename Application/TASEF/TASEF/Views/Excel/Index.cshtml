@model TASEF.Models.generalSettings
@{
    /**/



    ViewBag.Title = "Ajouter entreprise";
}
<h2>Informations générales</h2>
@ViewBag.Msg
<div class="text-danger">@Html.Raw(@ViewBag.sqlError)</div>

@using (Html.BeginForm("RegisterSte", "Excel", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.matricule, htmlAttributes: new { @class = "control-label col-md-2" ,id="L"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.matricule, new { htmlAttributes = new { @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.matricule, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nomEtPrenomRaisonSociale, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomEtPrenomRaisonSociale, new { htmlAttributes = new { @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.nomEtPrenomRaisonSociale, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.activite, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.activite, new { htmlAttributes = new { @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.activite, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.adresse, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adresse, new { htmlAttributes = new { @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.adresse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.exercice, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.exercice, new { htmlAttributes = new { @type = "number", @min = "1900", @max = "3000", @step = "1", @class = "form-control", Value = @DateTime.Now.Year } })
                @Html.ValidationMessageFor(model => model.exercice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.dateDebutExercice, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateDebutExercice, new { htmlAttributes = new { id = "datedebut", @type = "date", @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.dateDebutExercice, "", new { @class = "text-danger" })
                <div class="text-danger"> @ViewBag.dateError</div>
                <div class="text-danger">@ViewBag.dateDebutYearError </div>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.dateClotureExercice, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateClotureExercice, new { htmlAttributes = new { id = "datecloture", @type = "date", @class = "form-control", Value = @ViewBag.value } })
                @Html.ValidationMessageFor(model => model.dateClotureExercice, "", new { @class = "text-danger" })
                <div class="text-danger">@ViewBag.dateClotureYearError </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.actededepot, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.DropDownList("actededepot", new List<SelectListItem>
                 { new SelectListItem { Text = "Spontané", Value = "Spontané", Selected=true},
                   new SelectListItem { Text = "Rectification", Value = "Rectification"},
                   new SelectListItem { Text = "Régularisation", Value = "Régularisation"}
                   }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.actededepot, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.natureDepot, htmlAttributes: new { @class = "control-label col-md-2", id = "L" })
            <div class="col-md-10">
                @Html.DropDownList("naturedepot", new List<SelectListItem>
                 { new SelectListItem { Text = "Définitif", Value = "Définitif", Selected=true},
                   new SelectListItem { Text = "Provisoire", Value = "Provisoire"},
                   }, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.natureDepot, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-default" />
            </div>
        </div>
    </div>



}
<script>
    var current = new Date()
    var y = current.getFullYear()


    var debut = y + "-01-01"
    var cloture = y + "-12-31"
    document.getElementById("datedebut").valueAsDate = new Date(debut)
    document.getElementById("datecloture").valueAsDate = new Date(cloture)
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}




